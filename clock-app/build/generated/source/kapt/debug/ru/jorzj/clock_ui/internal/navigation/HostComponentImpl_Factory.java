// Generated by Dagger (https://dagger.dev).
package ru.jorzj.clock_ui.internal.navigation;

import com.arkivanov.decompose.ComponentContext;
import com.arkivanov.decompose.router.stack.StackNavigation;
import dagger.internal.DaggerGenerated;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

import ru.jorzj.clock_ui.internal.component.CurrentComponent;
import ru.jorzj.clock_ui.internal.component.HostComponentImpl;
import ru.jorzj.clock_ui.internal.component.ListComponent;
import ru.jorzj.clock_ui.internal.dagger.Config;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HostComponentImpl_Factory {
  private final Provider<ListComponent.Factory> listFactoryProvider;

  private final Provider<CurrentComponent.Factory> currentComponentFactoryProvider;

  private final Provider<StackNavigation<Config>> navProvider;

  public HostComponentImpl_Factory(Provider<ListComponent.Factory> listFactoryProvider,
      Provider<CurrentComponent.Factory> currentComponentFactoryProvider,
      Provider<StackNavigation<Config>> navProvider) {
    this.listFactoryProvider = listFactoryProvider;
    this.currentComponentFactoryProvider = currentComponentFactoryProvider;
    this.navProvider = navProvider;
  }

  public HostComponentImpl get(ComponentContext componentContext) {
    return newInstance(componentContext, listFactoryProvider.get(), currentComponentFactoryProvider.get(), navProvider.get());
  }

  public static HostComponentImpl_Factory create(
      Provider<ListComponent.Factory> listFactoryProvider,
      Provider<CurrentComponent.Factory> currentComponentFactoryProvider,
      Provider<StackNavigation<Config>> navProvider) {
    return new HostComponentImpl_Factory(listFactoryProvider, currentComponentFactoryProvider, navProvider);
  }

  public static HostComponentImpl newInstance(ComponentContext componentContext,
      ListComponent.Factory listFactory, CurrentComponent.Factory currentComponentFactory,
      StackNavigation<Config> nav) {
    return new HostComponentImpl(componentContext, listFactory, currentComponentFactory, nav);
  }
}
