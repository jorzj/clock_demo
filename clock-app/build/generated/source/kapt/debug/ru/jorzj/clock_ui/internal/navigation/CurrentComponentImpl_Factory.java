// Generated by Dagger (https://dagger.dev).
package ru.jorzj.clock_ui.internal.navigation;

import com.arkivanov.decompose.ComponentContext;
import dagger.internal.DaggerGenerated;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

import ru.jorzj.clock_ui.internal.component.CurrentComponentImpl;
import ru.jorzj.domain.GetTime;
import ru.jorzj.clock_ui.internal.dagger.Router;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class CurrentComponentImpl_Factory {
  private final Provider<Router> routerProvider;

  private final Provider<GetTime> getTimeProvider;

  public CurrentComponentImpl_Factory(Provider<Router> routerProvider,
      Provider<GetTime> getTimeProvider) {
    this.routerProvider = routerProvider;
    this.getTimeProvider = getTimeProvider;
  }

  public CurrentComponentImpl get(ComponentContext componentContext) {
    return newInstance(componentContext, routerProvider.get(), getTimeProvider.get());
  }

  public static CurrentComponentImpl_Factory create(Provider<Router> routerProvider,
      Provider<GetTime> getTimeProvider) {
    return new CurrentComponentImpl_Factory(routerProvider, getTimeProvider);
  }

  public static CurrentComponentImpl newInstance(ComponentContext componentContext, Router router,
      GetTime getTime) {
    return new CurrentComponentImpl(componentContext, router, getTime);
  }
}
