// Generated by Dagger (https://dagger.dev).
package ru.jorzj.clock_ui.internal.navigation.dagger;

import com.arkivanov.decompose.router.stack.StackNavigation;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import ru.jorzj.clock_ui.internal.dagger.Config;
import ru.jorzj.clock_ui.internal.dagger.Router;

import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class Router_Factory implements Factory<Router> {
  private final Provider<StackNavigation<Config>> navigationProvider;

  public Router_Factory(Provider<StackNavigation<Config>> navigationProvider) {
    this.navigationProvider = navigationProvider;
  }

  @Override
  public Router get() {
    return newInstance(navigationProvider.get());
  }

  public static Router_Factory create(Provider<StackNavigation<Config>> navigationProvider) {
    return new Router_Factory(navigationProvider);
  }

  public static Router newInstance(StackNavigation<Config> navigation) {
    return new Router(navigation);
  }
}
